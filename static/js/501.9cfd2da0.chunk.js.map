{"version":3,"file":"static/js/501.9cfd2da0.chunk.js","mappings":"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","sources":["Assets/Svg/Pagination/dots.svg","Components/Pagination/Pagination.js","webpack://client/./src/Pages/Manga/MangaTabs/Art/alttab.module.scss?8346","Pages/Manga/MangaTabs/Art/ArtTab.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDots(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"data-v-20f285ec\": \"\",\n    \"data-v-6b3fd699\": \"\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"text-currentColor icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    \"data-v-20f285ec\": \"\",\n    d: \"M12 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2Zm7 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM5 13a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDots);\nexport default __webpack_public_path__ + \"static/media/dots.9310f5ef667fb193c91027c696bd1b6a.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\r\nimport { DotsIcon } from '../../Assets/Svg/Pagination';\r\n\r\nconst Pagination = ({ pages, currPage, step, setOffset, setCurrPage }) => {\r\n    const handlePageChange = (page) => {\r\n        setOffset((page - 1) * step);\r\n        setCurrPage(page);\r\n    }\r\n\r\n    return (\r\n        <div className=\"page-block\">\r\n            {\r\n                Array.from(Array(pages), (e, idx) => {\r\n                    if (idx + 1 >= currPage - 2 && idx + 1 <= currPage + 2) {\r\n                        return <PaginationItem idx={idx} currPage={currPage} handlePageChange={handlePageChange} />\r\n                    } else if (idx+1 === currPage - 3 || idx+1 === currPage + 3) {\r\n                        return (\r\n                            <div key={idx + 1}>\r\n                                {\r\n                                    idx+1 === currPage - 3 ? \r\n                                    <div style={{display: 'flex'}}>\r\n                                        <PaginationItem idx={0} currPage={currPage} handlePageChange={handlePageChange} />\r\n                                        <PaginationVariable idx={'left'} pages={pages} handlePageChange={handlePageChange} />\r\n                                    </div>\r\n                                    :\r\n                                    <div style={{display: 'flex'}}>\r\n                                        <PaginationVariable idx={'right'} pages={pages} handlePageChange={handlePageChange} />\r\n                                        <PaginationItem idx={pages - 1} currPage={currPage} handlePageChange={handlePageChange} />\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        )\r\n                    }\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst PaginationItem = ({ idx, currPage, handlePageChange }) => {\r\n    return (\r\n        <span key={idx + 1} \r\n            className={ idx === currPage - 1 ? \"page-span pg-active\" : \"page-span\"}\r\n            onClick={() => handlePageChange(idx + 1)}>{idx + 1}\r\n        </span>\r\n    )\r\n}\r\n\r\nconst PaginationVariable = ({ idx, pages, handlePageChange }) => {\r\n    const [value, setValue] = useState('');\r\n    const [variable, setVariable] = useState('dots');\r\n\r\n    useEffect(() => {\r\n        if (variable === 'input') {\r\n            window.addEventListener('click', handleWindowClick);\r\n            window.addEventListener('keyup', handleWindowKeyup);\r\n        }\r\n        return () => {\r\n            window.removeEventListener('click', handleWindowClick);\r\n            window.removeEventListener('keyup', handleWindowKeyup);\r\n        }\r\n    }, [value])\r\n\r\n    const handleVariable = () => {\r\n        setVariable('input');\r\n    }\r\n\r\n    const handleValue = (e) => {\r\n        const value = +(e.target.value.match(/\\d*/gi).join(''));\r\n        setValue(value === 0 ? '' : value);\r\n    }\r\n\r\n    const handleWindowKeyup = (e) => {\r\n        if (e.key === 'Enter') handleWindowClick();\r\n    }\r\n\r\n    const handleWindowClick = () => {\r\n        if (value > 0 && value <= pages) {\r\n            handlePageChange(value);\r\n            setVariable('dots');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <span key={idx} className={variable === 'dots' ? \"page-span pg-dots\" : \"pg-span-input\"}\r\n            onClick={() => handleVariable()}>\r\n            {\r\n                variable === 'dots' ? \r\n                    <DotsIcon /> \r\n                        : \r\n                    <input \r\n                        onChange={(e) => handleValue(e)} \r\n                        value={value}\r\n                        className=\"pg-input\" type=\"text\" \r\n                    />\r\n            }\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Pagination;","// extracted by mini-css-extract-plugin\nexport default {\"alt_block_settings\":\"alttab_alt_block_settings__l7T+H\",\"img_settings\":\"alttab_img_settings__9folf\",\"alt_wrapp_settings\":\"alttab_alt_wrapp_settings__epz6y\",\"name\":\"alttab_name__uWsrK\"};","import React, { useState, useEffect, memo } from 'react';\r\nimport { ExploreIco } from '../../../../Assets/Svg/Covers';\r\nimport Cover from '../../../../SharedUI/StyledComponents/Cover/Cover';\r\nimport Pagination from '../../../../Components/Pagination/Pagination';\r\nimport MangaDexApi from '../../../../Services/MangaDexApi';\r\nimport styles from './alttab.module.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchMangaCovers } from '../../../../Store/Slices/mangaSlice';\r\n\r\nconst ArtTab = memo(({ mangaId }) => {\r\n\r\n    const [coversFeed, setCoversFeed] = useState([]);\r\n    const [pages, setPages] = useState(1);\r\n    const [offset, setOffset] = useState(0);\r\n    const [step, setStep] = useState(32);\r\n    const [currPage, setCurrPage] = useState(1);\r\n\r\n    const dispatch = useDispatch();\r\n    const covers = useSelector(state => state.manga.covers);\r\n\r\n    // useEffect(() => {\r\n    //     if (!covers.data) {\r\n    //         dispatch(fetchMangaCovers({mangaId}));\r\n    //     }\r\n    // }, []);\r\n\r\n    useEffect(() => {\r\n        if (covers.data.total) {\r\n            setPages(Math.ceil(covers?.data?.total / step));\r\n        }\r\n    }, [covers.data])\r\n\r\n    useEffect(() => {\r\n        setOffset((currPage - 1) * step);\r\n        dispatch(fetchMangaCovers({mangaId, offset}));\r\n    }, [currPage]);\r\n\r\n    // useEffect(() => {\r\n    //     setOffset((currPage - 1) * step);\r\n    //     (async() => {\r\n    //         const covers = await MangaDexApi.getMangaCoversByVolumes(mangaId, offset);\r\n    //         setCoversFeed(covers?.array);\r\n    //     })();\r\n    // }, [currPage])\r\n\r\n    return (\r\n        <>\r\n            <p className={styles.name}>Covers</p>\r\n            <div className={styles.alt_block_settings}>\r\n                {\r\n                    covers?.data?.array?.map(cover => (\r\n                        <Cover\r\n                            src={cover?.filePath}\r\n                            alt={'Volume cover ' + cover?.volume}\r\n                            stylesList={{\r\n                                height: '360px',\r\n                                width: '250px'\r\n                            }}\r\n                            classLists={{\r\n                                wrapp: styles.alt_wrapp_settings,\r\n                                img: styles.img_settings\r\n                            }}\r\n                        >\r\n                            <span><p>Volume {cover?.volume}</p></span>\r\n                        </Cover>\r\n                    ))\r\n                }\r\n            </div>\r\n            {/* <Pagination pages={pages} currPage={currPage} step={step} setOffset={setOffset} setCurrPage={setCurrPage} /> */}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default ArtTab;"],"names":["_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDots","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","className","ref","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","PaginationItem","idx","currPage","handlePageChange","onClick","PaginationVariable","pages","useState","value","setValue","variable","setVariable","useEffect","window","addEventListener","handleWindowClick","handleWindowKeyup","removeEventListener","e","onChange","match","join","handleValue","type","step","setOffset","setCurrPage","page","Array","from","style","display","memo","mangaId","setPages","offset","dispatch","useDispatch","covers","useSelector","state","manga","data","total","Math","ceil","fetchMangaCovers","styles","array","map","cover","Cover","src","filePath","alt","volume","stylesList","classLists","wrapp","img"],"sourceRoot":""}